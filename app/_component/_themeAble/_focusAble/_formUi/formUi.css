:host {
  --background: 242, 242, 242;
  --background-color: rgb(var(--background));
  
  /* z-index: initial !important; */
  border-radius: 20px;
  text-align: left;
  --cover-background: rgba(0, 0, 0, .04);
  --cover-shadow: none;
  
  --box-shadow: none;

  --transition: .5s;
  --active-cover-zIndex: unset;

}

move-me {
  display: inline-block;
  justify-content: center;
  position: relative;
  border-radius: inherit;
  width: inherit;
  height: inherit;
  max-width: inherit;
  max-height: inherit;
  box-shadow: var(--box-shadow);
}

/* root-bounds {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 6;
} */

.cover {
  border-radius: inherit;
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  display: block;
}

background-cover {
  background-color: var(--background-color);
}

.activeCover {
  background: var(--cover-background);
  box-shadow: var(--cover-shadow);
  opacity: 0;
  transition: var(--transition);
  border-radius: inherit;
  display: none;
  z-index: var(--active-cover-zIndex);
}

active-cover.activeCover {
  display: block;
}


@media (hover: hover) {
  hover-cover.activeCover {
    display: block;
  }  
}

/* :not(.afterClickFocus) */
:host(:hover:not(.disabled)) hover-cover.active {
  opacity: 1;
}


:host(:hover:active:not(.disabled)) active-cover.active {
  opacity: 1;
}





:host {
  --text: var(--primary-text);
  --drag: auto;

  /* private */
  --text-p: var(--text);
  --drag-p: var(--drag);
}

#componentBody {
  --text: var(--text-p);
  --drag: var(--drag-p);
  border-radius: inherit;
}

:host {
  --wave: var(--text);
  --wave-opacity: .07;
  --drag: none;

  /* private */
  --wave-color: rgba(var(--wave), var(--wave-opacity));
}

:host {
  position: relative;
  height: fit-content;
  width: fit-content;
  box-sizing: border-box;
}



button-waves {
  position: absolute;
  width: 100%;
  height: 100%;
  display: block;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 2;
  pointer-events: none;
}

button-wave-container {
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  overflow: hidden;
  -webkit-mask-image: -webkit-radial-gradient(circle, white, black);
}

button-wave {
  top: 0;
  left: 0;
  display: block;
  border-radius: 100%;
  height: 25px;
  width: 25px;
  position: absolute;
  -webkit-transform: scale(0);
  transform: scale(0);
}

button-wave {
  background: var(--wave-color);
}

prehover-detector {
  z-index: 1;
  position: absolute;
  cursor: inherit;
  width: 100%;
  height: 100%;
}

#componentBody {
  transition: opacity .3s, filter .3s;
}


:host(.disabled) #componentBody {
  opacity: .5;
  filter: grayscale(10%);
}

/* :host(.disabled) #componentBody {
  cursor: not-allowed;
} */